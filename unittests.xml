<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="24" errors="2" failures="0" skip="0"><testcase classname="tests.test_models.TestYourResourceModel" name="test_create_a_product" time="0.033"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_delete_a_product" time="0.076"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_deserialize_bad_data" time="0.025"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_deserialize_bad_status" time="0.028"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_deserialize_missing_data" time="0.035"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_find_by_name" time="0.047"><error type="builtins.AttributeError" message="'BaseQuery' object has no attribute 'id'&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: Sequence: Computing next value of &lt;function ProductFactory.&lt;lambda&gt; at 0x7f4692fecb80&gt; for seq=2&#10;factory.generate: DEBUG: Sequence: Computing next value of &lt;function ProductFactory.&lt;lambda&gt; at 0x7f4692fecb80&gt; for seq=3&#10;factory.generate: DEBUG: Sequence: Computing next value of &lt;function ProductFactory.&lt;lambda&gt; at 0x7f4692fecb80&gt; for seq=4&#10;flask.app: INFO: Creating Heather&#10;flask.app: INFO: Creating Michelle&#10;flask.app: INFO: Creating Curtis&#10;root: DEBUG: &lt;Product 'Curtis' id=[3]&gt;&#10;flask.app: INFO: Processing all Products&#10;flask.app: INFO: Processing name query for Michelle ...&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.9/unittest/case.py", line 593, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/vagrant/tests/test_models.py", line 206, in test_find_by_name
    self.assertEqual(product.id, products[1].id)
'BaseQuery' object has no attribute 'id'
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function ProductFactory.<lambda> at 0x7f4692fecb80> for seq=2
factory.generate: DEBUG: Sequence: Computing next value of <function ProductFactory.<lambda> at 0x7f4692fecb80> for seq=3
factory.generate: DEBUG: Sequence: Computing next value of <function ProductFactory.<lambda> at 0x7f4692fecb80> for seq=4
flask.app: INFO: Creating Heather
flask.app: INFO: Creating Michelle
flask.app: INFO: Creating Curtis
root: DEBUG: <Product 'Curtis' id=[3]>
flask.app: INFO: Processing all Products
flask.app: INFO: Processing name query for Michelle ...
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_find_or_404_found" time="0.037"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_find_or_404_not_found" time="0.033"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_find_product" time="0.054"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_serialize_a_product" time="0.024"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_update_a_product" time="0.035"></testcase><testcase classname="tests.test_models.TestYourResourceModel" name="test_update_with_empty_id" time="0.029"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_add_likecount" time="0.049"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_create_product" time="0.034"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_create_product_no_content_type" time="0.024"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_create_product_no_data" time="0.028"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_delete_product" time="0.039"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_get_product" time="0.035"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_get_product_byname" time="0.040"><error type="builtins.TypeError" message="list indices must be integers or slices, not str&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: Sequence: Computing next value of &lt;function ProductFactory.&lt;lambda&gt; at 0x7f4692fecb80&gt; for seq=18&#10;flask.app: INFO: Creating John&#10;flask.app: INFO: Processing name query for John ...&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.9/unittest/case.py", line 593, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/vagrant/tests/test_routes.py", line 110, in test_get_product_byname
    self.assertEqual(data["name"], test_product.name)
list indices must be integers or slices, not str
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function ProductFactory.<lambda> at 0x7f4692fecb80> for seq=18
flask.app: INFO: Creating John
flask.app: INFO: Processing name query for John ...
--------------------- >> end captured logging << ---------------------]]></error></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_get_product_list" time="0.028"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_index" time="0.030"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_method_not_supported" time="0.027"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_query_product_list_by_category" time="0.093"></testcase><testcase classname="tests.test_routes.TestProductServer" name="test_update_product" time="0.102"><system-out><![CDATA[<Product 'Alexis' id=[1]>
]]></system-out></testcase></testsuite>